name: Docker Image CI

on:
  push:
    branches: [ "master" ]

env:
  DATABASE_URL: ${{secrets.DATABASE_URL}}
  DISCORD_TOKEN: ${{secrets.DISCORD_TOKEN}}
  DISCORD_GUILD: ${{secrets.DISCORD_GUILD}}
  DISCORD_ARCHIVE_CHANNEL: ${{secrets.DISCORD_ARCHIVE_CHANNEL}}
  ADMIN_ID: ${{secrets.ADMIN_ID}}
  SPOTIFY_CID: ${{secrets.SPOTIFY_CID}}
  SPOTIFY_SECRET: ${{secrets.SPOTIFY_SECRET}}
  BETA: ${{secrets.BETA}}
  WORDNIK_API_KEY: ${{secrets.WORDNIK_API_KEY}}
  DOCKER_REGISTRY: ${{secrets.DOCKER_REGISTRY}}
  APP_NAME: ${{secrets.APP_NAME}}
  DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
  DOCKER_USER_NAME: ${{secrets.DOCKER_USER_NAME}}

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup environment variables
      run: |
        touch .env
        echo "DATABASE_URL=$DATABASE_URL" >> .env
        echo "DISCORD_TOKEN=$DISCORD_TOKEN" >> .env
        echo "DISCORD_GUILD=$DISCORD_GUILD" >> .env
        echo "DISCORD_ARCHIVE_CHANNEL=$DISCORD_ARCHIVE_CHANNEL" >> .env
        echo "ADMIN_ID=$ADMIN_ID" >> .env
        echo "SPOTIFY_CID=$SPOTIFY_CID" >> .env
        echo "SPOTIFY_SECRET=$SPOTIFY_SECRET" >> .env
        echo "BETA=$BETA" >> .env
        echo "WORDNIK_API_KEY=$WORDNIK_API_KEY" >> .env
    - name: Build the Docker image
      run: docker build -t $DOCKER_REGISTRY/$APP_NAME .
    - name: Docker login
      run: echo "$DOCKER_PASSWORD" | docker login --username $DOCKER_USER_NAME --password-stdin
    - name: Push image to registry
      run: |
        docker build -t $DOCKER_REGISTRY/$APP_NAME .  
        docker push $DOCKER_REGISTRY/$APP_NAME
  
  deploy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: SSH pipelines
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_KEY }}
        script: |
          sudo echo '"$DOCKER_PASSWORD"' | sudo docker login --username '"$DOCKER_USER_NAME"' --password-stdin;
          sudo docker pull '"$DOCKER_REGISTRY"'/'"$APP_NAME"':'"$DOCKER_TAG"';
          sudo docker run -d --name discord-bot legacy-discord-bot 
