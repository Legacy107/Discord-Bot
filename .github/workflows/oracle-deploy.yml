name: Docker Image CI

on:
  pull_request:
  push:
    branches: [ "master" ]

env:
  DATABASE_URL: ${{secrets.DATABASE_URL}}
  DISCORD_TOKEN: ${{secrets.DISCORD_TOKEN}}
  DISCORD_GUILD: ${{secrets.DISCORD_GUILD}}
  DISCORD_ARCHIVE_CHANNEL: ${{secrets.DISCORD_ARCHIVE_CHANNEL}}
  ADMIN_ID: ${{secrets.ADMIN_ID}}
  SPOTIFY_CID: ${{secrets.SPOTIFY_CID}}
  SPOTIFY_SECRET: ${{secrets.SPOTIFY_SECRET}}
  BETA: ${{secrets.BETA}}
  WORDNIK_API_KEY: ${{secrets.WORDNIK_API_KEY}}
  DOCKER_REGISTRY: ${{secrets.DOCKER_REGISTRY}}
  APP_NAME: ${{secrets.APP_NAME}}
  DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
  DOCKER_USER_NAME: ${{secrets.DOCKER_USER_NAME}}
  DOCKER_TAG: latest
  DOCKER_PLATFORM: ${{secrets.DOCKER_PLATFORM}}

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup environment variables
      run: |
        touch .env
        echo "DISCORD_TOKEN=$DISCORD_TOKEN" >> .env
        echo "DISCORD_GUILD=$DISCORD_GUILD" >> .env
        echo "DISCORD_ARCHIVE_CHANNEL=$DISCORD_ARCHIVE_CHANNEL" >> .env
        echo "ADMIN_ID=$ADMIN_ID" >> .env
        echo "SPOTIFY_CID=$SPOTIFY_CID" >> .env
        echo "SPOTIFY_SECRET=$SPOTIFY_SECRET" >> .env
        echo "BETA=$BETA" >> .env
        echo "WORDNIK_API_KEY=$WORDNIK_API_KEY" >> .env
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Docker login
      run: echo "$DOCKER_PASSWORD" | docker login --username $DOCKER_USER_NAME --password-stdin
    - name: Build the Docker image
      run: docker buildx build -t $DOCKER_REGISTRY/$APP_NAME --platform $DOCKER_PLATFORM --push .
  
  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: copy docker compose file via scp
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_KEY }}
        source: "docker-compose.yml,docker-compose.prod.yml"
        target: "/home/opc/discord-bot"
    
    - name: SSH pipelines
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_KEY }}
        envs: POSTGRES_USER,POSTGRES_PASSWORD,DOCKER_PLATFORM,DOCKER_PASSWORD,DOCKER_USER_NAME,DOCKER_REGISTRY,APP_NAME,DOCKER_TAG
        script: |
          cd discord-bot
          rm -f .env
          touch .env
          echo "DOCKER_PLATFORM=$DOCKER_PLATFORM" >> .env
          echo "DOCKER_REGISTRY=$DOCKER_REGISTRY" >> .env
          echo "APP_NAME=$APP_NAME" >> .env
          echo "DOCKER_TAG=$DOCKER_TAG" >> .env
          echo "POSTGRES_USER=$POSTGRES_USER" >> .env
          echo "POSTGRES_PASSWORD=$POSTGRES_PASSWORD" >> .env
          sudo docker stop $(sudo docker ps -a -q)
          sudo docker rm $(sudo docker ps -l -a -q)
          sudo docker rmi $(sudo docker images -a -q) 
          sudo echo "$DOCKER_PASSWORD" | sudo docker login --username $DOCKER_USER_NAME --password-stdin
          sudo docker compose -f docker-compose.yml -f docker-compose.prod.yml up -d
